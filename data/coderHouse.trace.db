2022-07-13 10:01:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "FECHANACHIMIENTO" no encontrada
Column "FECHANACHIMIENTO" not found; SQL statement:
INSERT INTO CLIENTE(nombre, apellido, dni, fechaNachimiento) VALUES( 'Clara', 'Gomez', 39548690,'1996-07-20'), ('Azucena', 'Garc√≠a', 25698712 ,'1970-03-15'), ('Ibrian', 'Festorazzi', 18662845 ,'1963-09-21'), ('Serafin' , 'Lopez', 24128074, '1974-08-31') [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:749)
	at org.h2.command.Parser.parseColumn(Parser.java:1256)
	at org.h2.command.Parser.parseColumnList(Parser.java:1241)
	at org.h2.command.Parser.parseInsert(Parser.java:1641)
	at org.h2.command.Parser.parsePrepared(Parser.java:814)
	at org.h2.command.Parser.parse(Parser.java:689)
	at org.h2.command.Parser.parse(Parser.java:661)
	at org.h2.command.Parser.prepareCommand(Parser.java:569)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:90)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:101)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.coderhouse.clientes.ClientesApplication.main(ClientesApplication.java:10)
2022-07-13 10:04:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "CLIENTE0_.EDAD" no encontrada
Column "CLIENTE0_.EDAD" not found; SQL statement:
select cliente0_.dni as dni1_0_, cliente0_.apellido as apellido2_0_, cliente0_.edad as edad3_0_, cliente0_.nombre as nombre4_0_ from cliente cliente0_ [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:244)
	at org.h2.expression.ExpressionColumn.optimizeOther(ExpressionColumn.java:226)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:213)
	at org.h2.expression.Alias.optimize(Alias.java:52)
	at org.h2.command.query.Select.prepareExpressions(Select.java:1170)
	at org.h2.command.query.Query.prepare(Query.java:218)
	at org.h2.command.Parser.prepareCommand(Parser.java:575)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:288)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:337)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:149)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:151)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:2122)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2059)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2037)
	at org.hibernate.loader.Loader.doQuery(Loader.java:956)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:357)
	at org.hibernate.loader.Loader.doList(Loader.java:2868)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2682)
	at org.hibernate.loader.Loader.list(Loader.java:2677)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:540)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:400)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:219)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1459)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1649)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1617)
	at org.hibernate.query.Query.getResultList(Query.java:165)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getResultList(CriteriaQueryTypeQueryAdapter.java:76)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:427)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:88)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy95.findAll(Unknown Source)
	at com.coderhouse.clientes.service.ClienteServiceImpl.getAll(ClienteServiceImpl.java:25)
	at com.coderhouse.clientes.controller.ClienteController.getAll(ClienteController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
2022-07-13 10:11:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Conversi√≥n de datos fallida, convirtiendo "DATE to INTEGER"
Data conversion error converting "DATE to INTEGER" [22018-214]
2022-07-13 10:23:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Conversi√≥n de datos fallida, convirtiendo "DATE to INTEGER"
Data conversion error converting "DATE to INTEGER" [22018-214]
2022-07-13 12:11:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Conversi√≥n de datos fallida, convirtiendo "'Gomez' (CLIENTE: ""DNI"" INTEGER NOT NULL)"
Data conversion error converting "'Gomez' (CLIENTE: ""DNI"" INTEGER NOT NULL)"; SQL statement:
INSERT INTO CLIENTE(nombre, apellido, dni, fechaNacimiento) VALUES( 39548690,'Clara', 'Gomez','1996-07-20'), (25698712,'Axel', 'Gar√≠n' ,'1970-03-15'), (18662845,'Marta','Insaurralde' ,'1963-09-21'), (24128074,'Miguel' , 'Fernandez', '1974-08-31') [22018-214]
2022-07-17 18:27:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "CLIENTE" ya existe
Table "CLIENTE" already exists; SQL statement:
CREATE TABLE CLIENTE ( dni INT not null, nombre VARCHAR(200), apellido VARCHAR(200), fechaNacimiento DATE not null, PRIMARY KEY (DNI) ) [42101-214]
2022-07-17 18:31:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "CLIENTE" ya existe
Table "CLIENTE" already exists; SQL statement:
CREATE TABLE CLIENTE ( dni INT not null, nombre VARCHAR(200), apellido VARCHAR(200), fechaNacimiento DATE not null, PRIMARY KEY (DNI) ) [42101-214]
2022-07-17 18:33:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "CLIENTE" ya existe
Table "CLIENTE" already exists; SQL statement:
CREATE TABLE CLIENTE ( dni INT not null, nombre VARCHAR(200), apellido VARCHAR(200), fechaNacimiento DATE not null, PRIMARY KEY (DNI) ) [42101-214]
2022-07-17 18:35:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "CLIENTE" ya existe
Table "CLIENTE" already exists; SQL statement:
CREATE TABLE CLIENTE ( dni INT not null, nombre VARCHAR(200), apellido VARCHAR(200), fechaNacimiento DATE not null, PRIMARY KEY (DNI) ) [42101-214]
2022-07-17 18:37:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "IDCLIENTE" no encontrada
Column "IDCLIENTE" not found; SQL statement:
CREATE TABLE COMPROBANTES ( IdComprobante int not null, Fecha datetime not null, Cantidad int not null, PrecioNeto int, Impuesto int, PrecioTotal int not null, DNI int not null, IdCliente int not null, primary key (IdComprobante), constraint FK_Cliente foreign key(IdCliente) references Clientes(IdCliente) ) [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:749)
	at org.h2.table.IndexColumn.mapColumns(IndexColumn.java:184)
	at org.h2.command.ddl.AlterTableAddConstraint.tryUpdate(AlterTableAddConstraint.java:218)
	at org.h2.command.ddl.AlterTableAddConstraint.update(AlterTableAddConstraint.java:72)
	at org.h2.command.ddl.AlterTable.update(AlterTable.java:46)
	at org.h2.command.ddl.CommandWithColumns.createConstraints(CommandWithColumns.java:83)
	at org.h2.command.ddl.CreateTable.update(CreateTable.java:134)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:252)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:90)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:97)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:75)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.coderhouse.clientes.ClientesApplication.main(ClientesApplication.java:10)
2022-07-17 18:37:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "CLIENTES" ya existe
Table "CLIENTES" already exists; SQL statement:
CREATE TABLE CLIENTES ( dni INT not null, nombre VARCHAR(200), apellido VARCHAR(200), fechaNacimiento DATE not null, PRIMARY KEY (DNI) ) [42101-214]
2022-07-17 18:38:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "CLIENTES" ya existe
Table "CLIENTES" already exists; SQL statement:
CREATE TABLE CLIENTES ( dni INT not null, nombre VARCHAR(200), apellido VARCHAR(200), fechaNacimiento DATE not null, PRIMARY KEY (DNI) ) [42101-214]
2022-07-17 18:39:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "CLIENTES" ya existe
Table "CLIENTES" already exists; SQL statement:
CREATE TABLE CLIENTES ( dni INT not null, nombre VARCHAR(200), apellido VARCHAR(200), fechaNacimiento DATE not null, PRIMARY KEY (DNI) ) [42101-214]
2022-07-17 18:46:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "CLIENTE" ya existe
Table "CLIENTE" already exists; SQL statement:
CREATE TABLE CLIENTE ( dni INT not null, nombre VARCHAR(200), apellido VARCHAR(200), fechaNacimiento DATE not null, PRIMARY KEY (DNI) ) [42101-214]
2022-07-17 18:48:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "CLIENTE" ya existe
Table "CLIENTE" already exists; SQL statement:
CREATE TABLE CLIENTE ( dni INT not null, nombre VARCHAR(200), apellido VARCHAR(200), fechaNacimiento DATE not null, PRIMARY KEY (DNI) ) [42101-214]
2022-07-17 18:51:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "CLIENTE" ya existe
Table "CLIENTE" already exists; SQL statement:
CREATE TABLE CLIENTE ( dni INT not null, nombre VARCHAR(200), apellido VARCHAR(200), fechaNacimiento DATE not null, PRIMARY KEY (DNI) ) [42101-214]
2022-07-17 19:02:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "IDCLIENTE" no encontrada
Column "IDCLIENTE" not found; SQL statement:
CREATE TABLE COMPROBANTES ( IdComprobante int not null, Fecha datetime not null, Cantidad int not null, PrecioNeto int, Impuesto int, PrecioTotal int not null, DNI int not null, IdCliente int not null, primary key (IdComprobante), constraint FK_Cliente foreign key(IdCliente) references Clientes(IdCliente) ) [42122-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:749)
	at org.h2.table.IndexColumn.mapColumns(IndexColumn.java:184)
	at org.h2.command.ddl.AlterTableAddConstraint.tryUpdate(AlterTableAddConstraint.java:218)
	at org.h2.command.ddl.AlterTableAddConstraint.update(AlterTableAddConstraint.java:72)
	at org.h2.command.ddl.AlterTable.update(AlterTable.java:46)
	at org.h2.command.ddl.CommandWithColumns.createConstraints(CommandWithColumns.java:83)
	at org.h2.command.ddl.CreateTable.update(CreateTable.java:134)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:252)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:90)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:97)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:75)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.coderhouse.clientes.ClientesApplication.main(ClientesApplication.java:10)
2022-07-17 19:05:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "CREATE TABLE COMPROBANTES ( IdComprobante int not null, Fecha datetime not null, Cantidad int not null, PrecioNeto int, Impuesto int, PrecioTotal int not null, DNI int not null, primary key (IdComprobante), [*])"; se esperaba "identifier"
Syntax error in SQL statement "CREATE TABLE COMPROBANTES ( IdComprobante int not null, Fecha datetime not null, Cantidad int not null, PrecioNeto int, Impuesto int, PrecioTotal int not null, DNI int not null, primary key (IdComprobante), [*])"; expected "identifier"; SQL statement:
CREATE TABLE COMPROBANTES ( IdComprobante int not null, Fecha datetime not null, Cantidad int not null, PrecioNeto int, Impuesto int, PrecioTotal int not null, DNI int not null, primary key (IdComprobante), ) [42001-214]
2022-07-17 20:59:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "INSERT INTO PRODUCTOS(IdProducto,Codigo,Cantidad,Precio) VALUES('iphoneX','AS457896',10,130[*]'usd'), ('iphoneXS','AS632578',5,120'usd')"; se esperaba "[, ::, AT, FORMAT, *, /, %, +, -, ||, NOT, IS, ILIKE, REGEXP, AND, OR, ,, )"
Syntax error in SQL statement "INSERT INTO PRODUCTOS(IdProducto,Codigo,Cantidad,Precio) VALUES('iphoneX','AS457896',10,130[*]'usd'), ('iphoneXS','AS632578',5,120'usd')"; expected "[, ::, AT, FORMAT, *, /, %, +, -, ||, NOT, IS, ILIKE, REGEXP, AND, OR, ,, )"; SQL statement:
INSERT INTO PRODUCTOS(IdProducto,Codigo,Cantidad,Precio) VALUES('iphoneX','AS457896',10,130'usd'), ('iphoneXS','AS632578',5,120'usd') [42001-214]
2022-07-17 21:00:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Conversi√≥n de datos fallida, convirtiendo "'iphoneX' (PRODUCTOS: ""IDPRODUCTO"" INTEGER NOT NULL)"
Data conversion error converting "'iphoneX' (PRODUCTOS: ""IDPRODUCTO"" INTEGER NOT NULL)"; SQL statement:
INSERT INTO PRODUCTOS(IdProducto,Codigo,Cantidad,Precio) VALUES('iphoneX','AS457896',10,130), ('iphoneXS','AS632578',5,120) [22018-214]
2022-07-17 21:01:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Conversi√≥n de datos fallida, convirtiendo "'iphonex' (PRODUCTOS: ""IDPRODUCTO"" INTEGER NOT NULL)"
Data conversion error converting "'iphonex' (PRODUCTOS: ""IDPRODUCTO"" INTEGER NOT NULL)"; SQL statement:
INSERT INTO PRODUCTOS(IdProducto,Codigo,Cantidad,Precio) VALUES('iphonex','AS457896',10,130), ('iphoneXS','AS632578',5,120) [22018-214]
2022-07-17 21:04:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Conversi√≥n de datos fallida, convirtiendo "'iphonex' (PRODUCTOS: ""IDPRODUCTO"" INTEGER NOT NULL)"
Data conversion error converting "'iphonex' (PRODUCTOS: ""IDPRODUCTO"" INTEGER NOT NULL)"; SQL statement:
INSERT INTO PRODUCTOS(IdProducto,Codigo,Cantidad,Precio) VALUES('iphonex','AS457896',10,130), ('iphoneXS','AS632578',5,120) [22018-214]
2022-07-17 21:05:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Conversi√≥n de datos fallida, convirtiendo "'iphone' (PRODUCTOS: ""IDPRODUCTO"" INTEGER NOT NULL)"
Data conversion error converting "'iphone' (PRODUCTOS: ""IDPRODUCTO"" INTEGER NOT NULL)"; SQL statement:
INSERT INTO PRODUCTOS(IdProducto,Codigo,Cantidad,Precio) VALUES('iphone','AS45789656',10,130), ('iphoneXS','AS63257845',5,120) [22018-214]
2022-07-17 21:38:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Conversi√≥n de datos fallida, convirtiendo "DOUBLE PRECISION to DATE"
Data conversion error converting "DOUBLE PRECISION to DATE" [22018-214]
2022-07-17 21:40:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Conversi√≥n de datos fallida, convirtiendo "DOUBLE PRECISION to DATE"
Data conversion error converting "DOUBLE PRECISION to DATE" [22018-214]
